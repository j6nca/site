{"version":3,"sources":["components/Nav.js","components/Style.js","components/Theme.js","components/Light.js","components/Landing.js","components/About.js","components/Work.js","components/Contact.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["Nav","Style","createGlobalStyle","theme","body","text","tags","lightTheme","darkTheme","IOSSwitch","withStyles","root","width","switchSize","height","padding","margin","spacing","switchBase","transform","color","palette","common","white","backgroundColor","opacity","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","classes","props","Switch","focusVisibleClassName","disableRipple","Landing","useState","setTheme","Container","id","Row","Col","className","style","marginTop","size","onChange","steps","loop","Infinity","wrapper","About","class","href","Work","Projects","map","project","index","xl","onClick","window","open","url","title","desc","tag","Contact","Content","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6cabd07b.chunk.js","sourcesContent":["import React,{useRef} from 'react';\n\nfunction Nav(){\n    return(\n        <ul class='navbar'>\n            <li class='nav-item'><a href='#landing'>home</a></li>\n            <li class='nav-item'><a href='#about'>about</a></li>\n            <li class='nav-item'><a href='#work'>work</a></li>\n            <li class='nav-item'><a href='#contact'>contact</a></li>\n        </ul>\n    );\n}\nexport default Nav;","import {createGlobalStyle} from 'styled-components';\nconst opacityDelay=0.2;\nexport const Style = createGlobalStyle`\n    body{\n        background: ${({ theme }) => theme.body};\n        color: ${({ theme }) => theme.text};\n        font-family: Roboto, sans-serif;\n        transition: all 0.25s linear;\n    }\n    a{\n        text-decoration: none;\n        color: ${({ theme }) => theme.text};\n        opacity: 0.5;\n        transition: opacity ${opacityDelay}s ease-out;\n        -moz-transition: opacity ${opacityDelay}s ease-out;\n        -webkit-transition: opacity ${opacityDelay}s ease-out;\n        -o-transition: opacity ${opacityDelay}s ease-out;\n    }\n    a:hover{\n        opacity: 1.0;\n        transition: opacity ${opacityDelay}s ease-out;\n        -moz-transition: opacity ${opacityDelay}s ease-out;\n        -webkit-transition: opacity ${opacityDelay}s ease-out;\n        -o-transition: opacity ${opacityDelay}s ease-out;\n    }\n    html{\n        scroll-behavior: smooth;\n\n    }\n    li{\n        list-style: none;\n    }\n    .navbar{\n        position: fixed;\n        padding-left: 1vw;\n        height: 100vh;\n        left: 0;\n        width: 25%;\n    }\n    #lightswitch{\n        \n    }\n    \n      #landing, #about{\n        height: 100vh;\n        min-height:500px;\n      }\n      #contact ul, ul.tagbox{\n        padding-left:0;\n      }\n      #contact ul li{\n        display: inline;\n        padding-right: 50px;\n      }\n      .Component-root-1, .jss1{\n        margin: 0 !important;\n      }\n      \n      .project:hover{\n        opacity:1;\n        transition: opacity ${opacityDelay}s ease-out;\n        -moz-transition: opacity ${opacityDelay}s ease-out;\n        -webkit-transition: opacity ${opacityDelay}s ease-out;\n        -o-transition: opacity ${opacityDelay}s ease-out;\n      }\n      .project{\n          opacity:0.5;\n          transition: opacity ${opacityDelay}s ease-out;\n          -moz-transition: opacity ${opacityDelay}s ease-out;\n          -webkit-transition: opacity ${opacityDelay}s ease-out;\n          -o-transition: opacity ${opacityDelay}s ease-out;\n          height: 250px;\n          margin-bottom:30px;\n          \n      }\n\n    Row Col{\n      opacity:0.5;\n    }\n    .container{\n      width: 50%;\n      min-width:400px;\n    }\n\n    .credits{\n      font-style:italic;\n      opacity:50%;\n    }\n    ul.tagbox li.tag{\n      display: inline-block;\n      padding: 10px;\n      text-align: center;\n      \n      margin-right: 10px;\n      border-radius: 250px;\n      background: ${({ theme }) => theme.tags};\n    }\n      `;\n","import React from 'react';\n\nexport const lightTheme = {\n    body: '#fcfcfc',\n    text: '#1e1e1e',\n    tags: '#d4d4d4',\n}\nexport const darkTheme = {\n    body: '#1e1e1e',\n    text: '#fcfcfc',\n    tags: '#383838',\n}\n","import React from 'react';\nimport {Switch} from \"@material-ui/core\";\nimport { withStyles } from '@material-ui/core/styles';\n\nconst switchSize=82;\nexport const IOSSwitch = withStyles((theme) => ({\n    root: {\n      width: switchSize+'px',\n      height: 50/switchSize*switchSize+'px',\n      padding: 1,\n      margin: theme.spacing(1),\n    },\n    switchBase: {\n      padding: 1,\n      '&$checked': {\n        transform: `translateX(${32/switchSize*switchSize}px)`,\n        color: theme.palette.common.white,\n        '& + $track': {\n          backgroundColor: '#52d869',\n          opacity: 1,\n          border: 'none',\n        },\n      },\n      '&$focusVisible $thumb': {\n        color: '#52d869',\n        border: '6px solid #fff',\n      },\n    },\n    thumb: {\n      width: 48/switchSize*switchSize+'px',\n      height: 48/switchSize*switchSize+'px',\n    },\n    track: {\n      borderRadius:  26/switchSize*switchSize+'px',\n      backgroundColor: '#D0D0D0',\n      opacity: 1,\n      transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n  }))(({ classes, ...props }) => {\n    return (\n      <Switch\n        focusVisibleClassName={classes.focusVisible}\n        disableRipple\n        classes={{\n          root: classes.root,\n          switchBase: classes.switchBase,\n          thumb: classes.thumb,\n          track: classes.track,\n          checked: classes.checked,\n        }}\n        {...props}\n      />\n    );\n  } );\n","import React,{useState} from 'react';\nimport Typical from 'react-typical'\n\nimport {ThemeProvider} from \"styled-components\";\nimport { Style } from \"./Style\";\nimport { lightTheme, darkTheme } from \"./Theme\"\nimport {IOSSwitch} from \"./Light\"\n\nimport {Container, Row,Col} from 'react-bootstrap'\nfunction Landing(){\n    const [theme, setTheme] = useState('dark');\n    const themeToggler = () => {\n      theme === 'light' ? setTheme('dark') : setTheme('light')\n    }\n    return(\n      <Container id='landing'>\n        <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <>\n      <Style/>\n        <Row>\n          <Col><h1 className='display-1'style={{marginTop:'40%'}}>j<IOSSwitch  color='primary' size=\"large\" onChange={themeToggler} />\nnathan ng</h1></Col>\n        </Row>\n        <Row>\n          <Col><Typical\n        steps={[\"👤 i'm a designer\", 1500, \"👤 i'm a developer\", 1500]}\n        loop={Infinity}\n        wrapper=\"span\"\n        className='h1'\n      /></Col>\n          \n        </Row>\n        <Row>\n          <Col>\n        <span className='h1'>based in 📍toronto</span>\n        </Col>\n        </Row>\n        <Row>\n          <Col>\n        </Col>\n        </Row> \n        \n\n        </>\n    </ThemeProvider>\n    </Container>\n    );\n}\nexport default Landing;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap'\n\nfunction About(){\n    return(\n            <Container id='about'>\n                <Row><Col><h1 class='display-4'>about</h1></Col></Row>\n                <Row><Col><p class='lead'>hi! i’m jonathan, a developer trying to transition into design. i have experience working in the banking, transportation, video and data privacy industries. <br/>\n            my hobbies include chess, fishing, grilling, film, videography, and curating <a href='https://open.spotify.com/user/ddojo?si=C8jSAq0IQp6kR1ShZlPYJw'>spotify playlists</a>. <br/>\n            i am currently studying systems design engineering at the university of waterloo. <a href='#contact'>chat with me!</a>\n            </p></Col></Row>\n            \n            </Container>\n    );\n}\nexport default About;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap'\nimport Projects from '../data/projects.json';\n\nfunction Work(){\n    return(\n            <Container>\n                <Row>\n                <Col><h1 className='display-4'>work</h1></Col>\n                </Row>\n                {Projects.map((project, index)=>{\n                    return <Row>\n                    <Col xl className='project' onClick={()=> window.open(project.url)}>\n                        <div style={{backgroundColor:'#1DA1F2',height:'250px',width:'340px'}}></div>\n                    </Col>\n                    <Col xl>\n                        <h2>{project.title}</h2>\n                        <p className='lead'>{project.desc}</p>\n                        <ul className=\"tagbox\">\n                            {project.tags.map((tag, index)=>{\n                                return <li className=\"tag\">{tag}</li>\n                            })}\n                        </ul>\n                    </Col>\n                </Row>\n                })}\n            </Container>\n    );\n}\nexport default Work;","import React from 'react';\nimport {Container, Row, Col} from 'react-bootstrap'\n\nfunction Contact(){\n    return(\n            <Container id='contact'>\n                <Row>\n                    <Col><h1 class='display-4'>contact</h1></Col>\n                </Row>\n                <Row>\n                    <Col><ul id='socials'>\n                <li><a href=\"https://linkedin.com/in/ngkjon\">linkedin</a></li>\n                <li><a href=\"mailto:jng.cad@gmail.com\">email</a></li>\n                <li><a href=\"https://open.spotify.com/user/ddojo?si=C8jSAq0IQp6kR1ShZlPYJw\">spotify</a></li>\n                <li><a href=\"https://www.dropbox.com/s/iztp8jyjkw5sf3v/resume.pdf?dl=0\">resume</a></li>\n            </ul></Col>\n                </Row>\n                <Row>\n                    <Col>\n                    <span className='lead credits'>made by me, with love 💙</span>\n                    </Col>\n                </Row>\n            \n            </Container>\n    );\n}\nexport default Contact;","import React from 'react';\nimport Landing from './Landing'\nimport About from './About'\nimport Work from './Work'\nimport Contact from './Contact'\n\n\n\nfunction Content(){\n    return(\n        <div id='content'>\n            <Landing/>\n            <About/>\n            <Work/>\n            <Contact/>\n        </div>\n    );\n}\nexport default Content;","import React,{useState} from 'react';\nimport './App.css';\n\nimport Nav from './components/Nav';\nimport Content from './components/Content';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nfunction App() {\n  \n\n  return (\n      \n    <div className=\"App\">\n      <header className=\"App-header\"></header>\n      \n      <Content></Content>\n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}